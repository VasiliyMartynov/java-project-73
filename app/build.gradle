plugins {
	id 'application'
	id 'checkstyle'
	id 'jacoco'
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.adarshr.test-logger' version '2.1.1'
	id 'com.github.ben-manes.versions' version '0.38.0'
	id 'org.liquibase.gradle' version '2.2.0'
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'

application {
	mainClass = 'hexlet.code.AppApplication'
}

repositories {
	mavenCentral()
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'

	implementation(
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'org.springframework.boot:spring-boot-starter-web',
			'com.querydsl:querydsl-jpa:5.0.0:jakarta',
			'info.picocli:picocli:4.7.5',
			'org.hibernate.validator:hibernate-validator:8.0.1.Final',
			'org.liquibase:liquibase-core',
			'org.projectlombok:lombok-mapstruct-binding:0.2.0',
			'org.mapstruct:mapstruct:1.5.5.Final',
			'org.springframework.boot:spring-boot-starter-actuator:3.1.4'
	)

	liquibaseRuntime(
			sourceSets.main.output,
			'org.liquibase:liquibase-core',
			'org.liquibase.ext:liquibase-hibernate6:4.23.2',
			'org.springframework.boot:spring-boot-starter-data-jpa',
			'com.h2database:h2:2.2.224',
			'info.picocli:picocli:4.7.5',
			'org.postgresql:postgresql:42.6.0'
	)

	runtimeOnly(
			'com.h2database:h2:2.2.224',
			'org.postgresql:postgresql:42.6.0'
	)

	testImplementation(
//			'org.springframework.boot:spring-boot-starter-security',
			'org.springframework.boot:spring-boot-starter-test',
			'org.assertj:assertj-core:3.11.1',
	)


	annotationProcessor(
			'org.projectlombok:lombok',
			'com.querydsl:querydsl-apt:5.0.0:jakarta',
			'jakarta.persistence:jakarta.persistence-api:3.1.0',
			'org.mapstruct:mapstruct-processor:1.5.5.Final'
	)
}

wrapper {
	gradleVersion = '8.2'
	distributionType = Wrapper.DistributionType.ALL
}

compileJava {
	options.release = 20
	options.encoding = 'UTF-8'
}

checkstyle {
	toolVersion '10.12.1'
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
}

diffChangelog {
	dependsOn compileJava
}

liquibase {
	activities {
		main {
			changelogFile 'src/main/resources/db/changelog/db.changelog-diff.yaml'
			url 'jdbc:h2:./taskManagerDB'
			referenceUrl 'hibernate:spring:hexlet.code.models.user' +
					'?dialect=org.hibernate.dialect.H2Dialect' +
					'&hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy'
		}
	}
}



